version: "3.8"

services:
  web:
    container_name: lms
    # image: dodziraynard/lms:latest
    build: .
    command: sh -c 'gunicorn lms.wsgi:application --bind 0.0.0.0:8000 & celery -A lms worker -l info'
    restart: always
    volumes:
      - static_volume:/home/lms/src/static
      - assets_volume:/home/lms/src/assets
      - logs_volume:/home/lms/src/logs
    expose:
      - 8000
    env_file:
      - ./.env.prod
    depends_on:
      - db
      - redis
  db:
    container_name: lms_db
    image: postgres:13.0-alpine
    restart: always
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    env_file:
      - ./.env.prod.db
    ports:
      - 1598:5432
  redis:
    container_name: lms_redis
    image: "redis:alpine"
    restart: always
    expose:
      - 6379
  nginx:
    container_name: lms_nginx
    build: ./nginx
    restart: always
    volumes:
      - static_volume:/home/lms/src/static
      - assets_volume:/home/lms/src/assets
      - logs_volume:/home/lms/src/logs
      - ./data/certbot/conf:/etc/letsencrypt
      - ./data/certbot/www:/var/www/certbot
    command: "/bin/sh -c 'while :; do sleep 6h & wait $${!}; nginx -s reload; done & nginx -g \"daemon off;\"'"
    ports:
      - 80:80
      - 443:443
    depends_on:
      - web
  certbot:
    container_name: lms_certbot
    image: certbot/certbot
    entrypoint: "/bin/sh -c 'trap exit TERM; while :; do certbot renew; sleep 12h & wait $${!}; done;'"
    volumes:
      - ./data/certbot/conf:/etc/letsencrypt
      - ./data/certbot/www:/var/www/certbot

volumes:
  postgres_data: null
  static_volume: null
  assets_volume: null
  logs_volume: null
