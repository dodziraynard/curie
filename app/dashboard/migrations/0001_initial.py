# Generated by Django 4.1.7 on 2023-04-01 14:16

import django.db.models.deletion
import django.utils.timezone
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Course',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('deleted', models.BooleanField(default=False)),
                ('code', models.CharField(max_length=50, unique=True)),
                ('name', models.CharField(max_length=100, unique=True)),
            ],
            options={
                'db_table': 'courses',
            },
        ),
        migrations.CreateModel(
            name='Department',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('deleted', models.BooleanField(default=False)),
                ('name', models.CharField(max_length=100, unique=True)),
            ],
            options={
                'db_table': 'departments',
            },
        ),
        migrations.CreateModel(
            name='House',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('deleted', models.BooleanField(default=False)),
                ('name', models.CharField(max_length=200)),
                ('code', models.CharField(max_length=200)),
            ],
            options={
                'db_table': 'houses',
            },
        ),
        migrations.CreateModel(
            name='Klass',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('deleted', models.BooleanField(default=False)),
                ('class_id', models.CharField(max_length=50, unique=True)),
                ('name', models.CharField(max_length=50, unique=True)),
                ('form', models.IntegerField(default=1)),
                ('stream', models.CharField(max_length=5)),
            ],
            options={
                'verbose_name': 'Class',
                'verbose_name_plural': 'Classes',
                'db_table': 'classes',
            },
        ),
        migrations.CreateModel(
            name='Record',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('deleted', models.BooleanField(default=False)),
                ('exam_score', models.IntegerField(blank=True, default=0, null=True)),
                ('class_score', models.IntegerField(blank=True, default=0, null=True)),
                ('total_exam_score', models.IntegerField(blank=True, default=100, null=True)),
                ('total_class_score', models.IntegerField(blank=True, default=100, null=True)),
                ('total', models.IntegerField(blank=True, default=0, null=True)),
                ('grade', models.CharField(blank=True, max_length=5, null=True)),
                ('remark', models.CharField(blank=True, max_length=20, null=True)),
                ('position', models.CharField(blank=True, max_length=5, null=True)),
                ('roll_no', models.IntegerField(blank=True, null=True)),
                ('rank', models.CharField(blank=True, max_length=20, null=True)),
            ],
            options={
                'db_table': 'academic_records',
                'permissions': [('manage_other_record', 'Can add/change academic/classwork records of other teachers')],
            },
        ),
        migrations.CreateModel(
            name='SessionReport',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('deleted', models.BooleanField(default=False)),
                ('attendance', models.IntegerField(blank=True, default=0, null=True)),
                ('total_attendance', models.IntegerField(blank=True, default=0, null=True)),
                ('assistant_head_signature', models.ImageField(blank=True, null=True, upload_to='uploads/signatures')),
                ('promotion', models.CharField(blank=True, max_length=200, null=True)),
            ],
            options={
                'db_table': 'class_teacher_report',
                'permissions': [('manage_other_report', 'Can manage reports of other classes.'), ('manage_class_teacher_report', 'Can manage class teacher report.'), ('manage_house_master_report', 'Can manage house master report.'), ('append_assistance_head_signature', 'Can append assistance head signature.')],
            },
        ),
        migrations.CreateModel(
            name='Staff',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('deleted', models.BooleanField(default=False)),
                ('staff_id', models.CharField(max_length=100, unique=True)),
                ('has_left', models.BooleanField(default=False)),
                ('teaching', models.BooleanField(default=True)),
            ],
            options={
                'verbose_name_plural': 'Staff',
                'db_table': 'staff',
            },
        ),
        migrations.CreateModel(
            name='Student',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('deleted', models.BooleanField(default=False)),
                ('student_id', models.CharField(max_length=100, unique=True)),
                ('bio', models.TextField(blank=True, null=True)),
                ('father', models.CharField(blank=True, max_length=200, null=True)),
                ('mother', models.CharField(blank=True, max_length=200, null=True)),
                ('completed', models.BooleanField(default=False)),
                ('last_promotion_date', models.DateField(default=django.utils.timezone.now)),
                ('start_date', models.DateField(blank=True, null=True)),
                ('end_date', models.DateField(blank=True, null=True)),
            ],
            options={
                'db_table': 'students',
                'permissions': [('promote_student', 'Can promote students')],
            },
        ),
        migrations.CreateModel(
            name='StudentPromotionHistory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('deleted', models.BooleanField(default=False)),
            ],
            options={
                'db_table': 'student_promotion_history',
            },
        ),
        migrations.CreateModel(
            name='Subject',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('deleted', models.BooleanField(default=False)),
                ('code', models.CharField(max_length=50, unique=True)),
                ('name', models.CharField(max_length=100, unique=True)),
                ('is_elective', models.BooleanField()),
            ],
            options={
                'db_table': 'subjects',
            },
        ),
        migrations.CreateModel(
            name='SubjectMapping',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('deleted', models.BooleanField(default=False)),
                ('klass', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='combinations', to='dashboard.klass', verbose_name='Class')),
            ],
            options={
                'db_table': 'subject_mapping',
            },
        ),
    ]
